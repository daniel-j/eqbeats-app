// Generated by CoffeeScript 1.6.3
this.App.module('Track.Show', function(Show, App, Backbone, Marionette, $, _) {
  'use strict';
  Show.Layout = Marionette.Layout.extend({
    template: '#track-layout',
    className: 'track',
    regions: {
      info: '#info',
      player: '#track-player'
    }
  });
  Show.Info = Marionette.ItemView.extend({
    template: '#track-info',
    modelEvents: {
      'sync': 'render'
    },
    templateHelpers: {
      formattedDate: function(timestamp) {
        var months, t;
        months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        t = new Date(timestamp * 1000);
        return months[t.getMonth()] + " " + t.getDate() + ", " + t.getFullYear();
      }
    }
  });
  return Show.Player = Marionette.ItemView.extend({
    template: '#track-player-template',
    className: 'track-player',
    modelEvents: {
      'sync': 'render'
    },
    events: {
      'click button.play-track': function() {
        return App.commands.execute("track:play", this.model, this);
      },
      'click button.add-to-queue': function() {
        return App.commands.execute("track:queue:clicked", this.model, this);
      }
    },
    onRender: function() {
      App.mainRegion.$el.scroll(this.onScroll);
      return this.onScroll.apply(App.mainRegion.$el);
    },
    onClose: function() {
      return App.mainRegion.$el.unbind('scroll', this.onScroll);
    },
    onScroll: function() {
      var el, percent;
      el = $(this);
      percent = -(el.scrollTop() / 480) * 50 + 75;
      return el.find(".cover").css({
        'background-position': 'center ' + percent + '%'
      });
    }
  });
});
