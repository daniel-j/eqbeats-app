// Generated by CoffeeScript 1.6.3
this.App.module('Playlist.Show', function(Show, App, Backbone, Marionette, $, _) {
  'use strict';
  return Show.Controller = App.Controllers.Base.extend({
    initialize: function(options) {
      var author, id, playlist,
        _this = this;
      id = options.id;
      playlist = App.request("playlist:entity", id);
      author = null;
      this.layout = this.getLayoutView();
      playlist.bind('sync', function() {
        author = App.request("user:entity", playlist.get('author').id);
        author.bind('sync', function() {
          return playlist.set('author', author.attributes);
        });
        return _this.show(_this.layout, {
          loading: {
            entities: [playlist, author]
          }
        });
      });
      return this.listenTo(this.layout, 'show', function() {
        _this.showPlaylistInfoView(playlist);
        return _this.showPlaylistListView(playlist);
      });
    },
    showPlaylistInfoView: function(playlist) {
      var infoView;
      infoView = this.getInfoView(playlist);
      return this.layout.info.show(infoView);
    },
    showPlaylistListView: function(playlist) {
      var listView;
      listView = this.getListView(playlist);
      return this.layout.list.show(listView);
    },
    getInfoView: function(playlist) {
      return new Show.Info({
        model: playlist
      });
    },
    getListView: function(playlist) {
      return new App.View.Playlist({
        collection: playlist.get('collection')
      });
    },
    getLayoutView: function() {
      return new Show.Layout;
    }
  });
});
